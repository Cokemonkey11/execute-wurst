package Spawn
import Units

tuple unit2(int a, int b)

tuple unit2s(unit2 human, unit2 orc)

enum Race
    _DEFAULT
    HUMAN
    ORC

function unit2.sample() returns int
    if GetRandomInt(0, 1) == 0
        return this.a
    else
        return this.b

function unit2s.fromRace(Race r) returns unit2
    if r == Race.HUMAN
        return this.human
    else
        return this.orc

function player.toRace() returns Race
    if this.getId() % 2 == 0
        return Race.HUMAN
    else
        return Race.ORC

function player.slotStatePlaying() returns bool
    return this.getSlotState() == PLAYER_SLOT_STATE_PLAYING

init
    let mapping = unit2s(unit2(ID_PL, ID_MK), unit2(ID_BM, ID_TC))

    for i = 0 to 23
        let p = Player(i)
        if p.slotStatePlaying()
            createUnit(p,
                       mapping.fromRace(p.toRace()).sample(),
                       vec2(0., 0.).polarOffset(angle(2. * PI * i / 24.), 1000.),
                       angle(0.))
